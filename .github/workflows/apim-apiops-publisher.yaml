name: APIM APIOPS Publisher
 
on:
  workflow_call:
    inputs:
      destination-enviroment-prod:
        type: string
        required: true
      destination-enviroment-hml:
        type: string
        required: true
      commit-id:
        type: string
        required: true
    
env:
  apiops_release_version: v6.0.0-alpha.1.0.9

jobs:
  
  publisher-prod:
    if: ${{ needs.set-flag.outputs.run_prod == 'true' && needs.set-flag.outputs.run_hml != 'true' }}
    
    environment: ${{ inputs.destination-enviroment-prod }}
    runs-on: ubuntu-latest
    outputs:
      run-prod: ${{ steps.set-prod-flag.outputs.run_prod }}
      run-hml: ${{ steps.set-hml-flag.outputs.run_hml }}
    steps:
      
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: Set Prod Flag
      id: set-prod-flag
      run: echo "::set-output name=run_prod::true"
      
    - name: Set HML Flag
      id: set-hml-flag
      run: echo "::set-output name=run_hml::true"
 
    - name: Runs APIOPS Publisher
      env:
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        AZURE_RESOURCE_GROUP_NAME: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
        API_MANAGEMENT_SERVICE_NAME: ${{ secrets.API_MANAGEMENT_SERVICE_NAME }}
        API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ GITHUB.WORKSPACE }}/apimartifacts
        CONFIGURATION_YAML_PATH: ${{ GITHUB.WORKSPACE }}/configuration.${{ inputs.destination-enviroment-prod }}.yaml
        COMMIT_ID: ${{ inputs.commit-id != '' && inputs.commit-id || github.sha }}
 
      run: |
        Set-StrictMode -Version Latest
        $ErrorActionPreference = "Stop"
        $VerbosePreference = "Continue"
        $InformationPreference = "Continue"
 
        Write-Information "Setting name variables..."
        $releaseFileName = "publisher-linux-x64.zip"
        $executableFileName = "publisher"
 
        Write-Information "Downloading release..."
        $uri = "https://github.com/Azure/apiops/releases/download/${{ env.apiops_release_version }}/$releaseFileName"
        $downloadFilePath = Join-Path "${{ runner.temp }}" $releaseFileName
        Invoke-WebRequest -Uri "$uri" -OutFile "$downloadFilePath"
 
        Write-Information "Extracting release..."
        $executableFolderPath = Join-Path "${{ runner.temp }}" "publisher"
        Expand-Archive -Path "$downloadFilePath" -DestinationPath "$executableFolderPath"
        $executableFilePath = Join-Path "$executableFolderPath" $executableFileName
 
        Write-Information "Setting file permissions..."
        & chmod +x "$executableFilePath"
        if ($LASTEXITCODE -ne 0) { throw "Setting file permissions failed."}
 
        Write-Information "Running publisher..."
        & "$executableFilePath"
        if ($LASTEXITCODE -ne 0) { throw "Running publisher failed."}
 
        Write-Information "Execution complete."
 
      shell: pwsh
  
  publisher-hml:

    if: ${{ needs.publisher-prod.outputs.run-prod == 'true' && needs.publisher-prod.outputs.run_hml != 'true' }}

    environment: ${{ inputs.destination-enviroment-hml }}
    runs-on: ubuntu-latest

    steps:
 
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
 
    - name: Runs APIOPS Publisher
      env:
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        AZURE_RESOURCE_GROUP_NAME: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
        API_MANAGEMENT_SERVICE_NAME: ${{ secrets.API_MANAGEMENT_SERVICE_NAME }}
        API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ GITHUB.WORKSPACE }}/apimartifacts
        CONFIGURATION_YAML_PATH: ${{ GITHUB.WORKSPACE }}/configuration.${{ inputs.destination-enviroment-hml }}.yaml
        COMMIT_ID: ${{ inputs.commit-id != '' && inputs.commit-id || github.sha }}
 
      run: |
        Set-StrictMode -Version Latest
        $ErrorActionPreference = "Stop"
        $VerbosePreference = "Continue"
        $InformationPreference = "Continue"
 
        Write-Information "Setting name variables..."
        $releaseFileName = "publisher-linux-x64.zip"
        $executableFileName = "publisher"
 
        Write-Information "Downloading release..."
        $uri = "https://github.com/Azure/apiops/releases/download/${{ env.apiops_release_version }}/$releaseFileName"
        $downloadFilePath = Join-Path "${{ runner.temp }}" $releaseFileName
        Invoke-WebRequest -Uri "$uri" -OutFile "$downloadFilePath"
 
        Write-Information "Extracting release..."
        $executableFolderPath = Join-Path "${{ runner.temp }}" "publisher"
        Expand-Archive -Path "$downloadFilePath" -DestinationPath "$executableFolderPath"
        $executableFilePath = Join-Path "$executableFolderPath" $executableFileName
 
        Write-Information "Setting file permissions..."
        & chmod +x "$executableFilePath"
        if ($LASTEXITCODE -ne 0) { throw "Setting file permissions failed."}
 
        Write-Information "Running publisher..."
        & "$executableFilePath"
        if ($LASTEXITCODE -ne 0) { throw "Running publisher failed."}
 
        Write-Information "Execution complete."
 
      shell: pwsh