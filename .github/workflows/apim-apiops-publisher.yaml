name: APIM APIOPS Publisher
 
on:
  workflow_call:
    inputs:
      destination-enviroment:
        type: string
        required: true
      # commit-id:
      #   type: string
      #   required: true
      release:
        type: string
        required: true
      
    
env:
  apiops_release_version: v6.0.0-alpha.1.0.9

jobs:
  
  publisher:

    environment: ${{ inputs.destination-enviroment }}
    runs-on: ubuntu-latest
    # outputs:
    #   commit-id: ${{steps.get-commit-id.outputs.commit-id}}
    steps:
      
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: Get commit_id
      id: get-commit-id
      run: |
         git fetch --tags
         OUTPUT_COMMIT_ID=$(git show-ref --tags | grep ${{inputs.release}})
         COMMIT_HASH=$(echo $input_str | grep -oP '^[0-9a-f]{40}')        
         echo "commit-id=$COMMIT_HASH" >> $GITHUB_ENV 
 
    - name: Runs APIOPS Publisher
      env:
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        AZURE_RESOURCE_GROUP_NAME: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
        API_MANAGEMENT_SERVICE_NAME: ${{ secrets.API_MANAGEMENT_SERVICE_NAME }}
        API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ GITHUB.WORKSPACE }}/apimartifacts
        CONFIGURATION_YAML_PATH: ${{ GITHUB.WORKSPACE }}/configuration.${{ inputs.destination-enviroment }}.yaml
        COMMIT_ID: ${{ inputs.release != '' && env.commit-id || github.sha }}
 
      run: |
        Set-StrictMode -Version Latest
        $ErrorActionPreference = "Stop"
        $VerbosePreference = "Continue"
        $InformationPreference = "Continue"
 
        Write-Information "Setting name variables..."
        $releaseFileName = "publisher-linux-x64.zip"
        $executableFileName = "publisher"
 
        Write-Information "Downloading release..."
        $uri = "https://github.com/Azure/apiops/releases/download/${{ env.apiops_release_version }}/$releaseFileName"
        $downloadFilePath = Join-Path "${{ runner.temp }}" $releaseFileName
        Invoke-WebRequest -Uri "$uri" -OutFile "$downloadFilePath"
 
        Write-Information "Extracting release..."
        $executableFolderPath = Join-Path "${{ runner.temp }}" "publisher"
        Expand-Archive -Path "$downloadFilePath" -DestinationPath "$executableFolderPath"
        $executableFilePath = Join-Path "$executableFolderPath" $executableFileName
 
        Write-Information "Setting file permissions..."
        & chmod +x "$executableFilePath"
        if ($LASTEXITCODE -ne 0) { throw "Setting file permissions failed."}
 
        Write-Information "Running publisher..."
        & "$executableFilePath"
        if ($LASTEXITCODE -ne 0) { throw "Running publisher failed."}
 
        Write-Information "Execution complete."
 
      shell: pwsh
  
  