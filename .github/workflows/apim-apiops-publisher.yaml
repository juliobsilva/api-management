name: APIM APIOPS Publisher
 
on:
  workflow_call:
    inputs:
      destination-enviroment:
        type: string
        required: true
      # commit-id:
      #   type: string
      #   required: true
env:
  apiops_release_version: v6.0.0-alpha.1.0.8
 
jobs:
 
  publisher:
    environment: ${{ inputs.destination-enviroment }}
    runs-on: ubuntu-latest
 
    steps:
 
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2

    # Run Spectral
    - uses: actions/setup-node@v3
      with:
        node-version: "14"
    - run: npm install -g @stoplight/spectral
    - run: spectral lint "${{ GITHUB.WORKSPACE }}/apimartifacts\apis\*.{json,yml,yaml}" --ruleset https://raw.githubusercontent.com/connectedcircuits/devops-api-linter/main/rules.yaml

    # Add this step for each APIM environment and pass specific set of secrets that you want replaced in the env section below
    - name: "Perform namevalue secret substitution in configuration.${{ inputs.destination-enviroment }}.yaml"
      if: (inputs.destination-enviroment == 'prod' )
      uses: cschleiden/replace-tokens@v1.1
      with:
        tokenPrefix: "{#"
        tokenSuffix: "#}"
        files: ${{ format('["**/configuration.{0}.yaml"]', inputs.destination-enviroment) }}
    # specify environment specific secrets to be replaced. For example the QA environment could have a different set sercrets to
    # replace within the configuration.[environment].yaml file
      env:
        testSecretValue: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}

    - name: Set the Commit Id
      id: commit
      run: |
          echo "::set-output name=commit_id::${{ github.sha }}"
 
    - name: Runs APIOPS Publisher
      env:
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        AZURE_RESOURCE_GROUP_NAME: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
        API_MANAGEMENT_SERVICE_NAME: ${{ secrets.API_MANAGEMENT_SERVICE_NAME }}
        API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ GITHUB.WORKSPACE }}/apimartifacts
        CONFIGURATION_YAML_PATH: ${{ GITHUB.WORKSPACE }}/configuration.${{ inputs.destination-enviroment }}.yaml
        API_MANAGEMENT_ENVIRONMENT: prod
        API_MANAGEMENT_ENVIROMENT:
        COMMIT_ID: ${{ steps.commit.outputs.commit_id }}
 
      run: |
        Set-StrictMode -Version Latest
        $ErrorActionPreference = "Stop"
        $VerbosePreference = "Continue"
        $InformationPreference = "Continue"
 
        Write-Information "Setting name variables..."
        $releaseFileName = "publisher-linux-x64.zip"
        $executableFileName = "publisher"
 
        Write-Information "Downloading release..."
        $uri = "https://github.com/Azure/apiops/releases/download/${{ env.apiops_release_version }}/$releaseFileName"
        $downloadFilePath = Join-Path "${{ runner.temp }}" $releaseFileName
        Invoke-WebRequest -Uri "$uri" -OutFile "$downloadFilePath"
 
        Write-Information "Extracting release..."
        $executableFolderPath = Join-Path "${{ runner.temp }}" "publisher"
        Expand-Archive -Path "$downloadFilePath" -DestinationPath "$executableFolderPath"
        $executableFilePath = Join-Path "$executableFolderPath" $executableFileName
 
        Write-Information "Setting file permissions..."
        & chmod +x "$executableFilePath"
        if ($LASTEXITCODE -ne 0) { throw "Setting file permissions failed."}
 
        Write-Information "Running publisher..."
        & "$executableFilePath"
        if ($LASTEXITCODE -ne 0) { throw "Running publisher failed."}
 
        Write-Information "Execution complete."
 
      shell: pwsh